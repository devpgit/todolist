{"version":3,"sources":["utils/axios.js","components/todoList/TodoItem.js","utils/parseUrl.js","components/todoList/addItem.js","pages/todoList/index.js","pages/login/index.js","App.js","index.js"],"names":["service","axios","create","baseURL","timeout","TodoItem","state","edit","default","startTime","endTime","summary","deleteHandler","_callee","e","id","token","result","regenerator_default","a","wrap","_context","prev","next","preventDefault","delete","data","sent","_this","resultHandler","stop","msg","errMsg","message","success","props","reload","error","confirmHandler","_callee2","status","_context2","patch","setVisible","show","setState","form","resetFields","getDefault","_callee3","defaultState","_context3","get","concat","Object","objectSpread","start","dateTime","end","updateHandler","_callee5","inputInfo","_context5","console","log","getFieldsValue","validateFields","_ref5","asyncToGenerator","mark","_callee4","err","endDate","startDate","_context4","abrupt","format","_x11","apply","this","arguments","_this2","getFieldDecorator","config","initialValue","moment","rules","type","required","config2","react_default","createElement","className","onChange","htmlFor","content","onClick","href","modal","title","style","top","visible","onOk","onCancel","es_form","Item","label","date_picker","validator","rule","value","callback","test","input","placeholder","React","Component","todoList_TodoItem","urlParse","url","params","URL","searchParams","obj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","done","pair","return","resHandler","res","todoList_addItem","hasFeedback","es_button","_ref","post","_x","Todolist","inputValue","list","loading","getListResultHandler","code","history","push","confirmed","filter","item","notConfirmed","spin","spinning","map","index","key","parseUrl","document","location","withRouter","login","App","react_router_dom","react_router","path","exact","component","TodoList","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.8a996b3b.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst service = axios.create({\n    baseURL: 'http://localhost:5000/api',\n    timeout: 5000\n})\n\nexport default service;","import React from 'react';\r\nimport axios from '../../utils/axios';\r\nimport { message, Modal, Form, Input, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nclass TodoItem extends React.Component{\r\n\tstate = {\r\n\t\tedit: false,\r\n\t\tdefault: {\r\n\t\t\tstartTime: '2019/01/01',\r\n\t\t\tendTime: '2019/01/01',\r\n\t\t\tsummary: ''\r\n\t\t}\r\n\t}\r\n\trender(){\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\tconst config = {\r\n\t\t\tinitialValue: moment(this.state.default.startTime, 'YYYY-MM-DD'),\r\n\t\t\trules: [{ type: 'object', required: true, message: '請選擇日期' }],\r\n\t\t};\r\n\t\tconst config2 = {\r\n\t\t\tinitialValue: moment(this.state.default.endTime, 'YYYY-MM-DD'),\r\n\t\t\trules: [{ type: 'object', required: true, message: '請選擇日期' }],\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<li className={this.props.status!==\"confirmed\" ? 'todo__item': 'todo__item--complete'}>\r\n\t\t\t\t<div className=\"form__checkbox-group\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tonChange={(e)=>this.confirmHandler(this.props.id, this.props.token, this.props.status)}\r\n\t\t\t\t\t\t// checked={this.props.type === \"ok\"? true: \"\"}\r\n\t\t\t\t\t\ttype=\"checkbox\" className=\"form__checkbox-input\" id={this.props.id} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor={this.props.id} className=\"form__checkbox-label\">\r\n\t\t\t\t\t\t<span className=\"form__checkbox-button\"></span>\t\t\t\t\t\t\t\t\t         \r\n\t\t\t\t\t</label>               \r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"todo__content\">\r\n\t\t\t\t\t<div className=\"form__group\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{this.props.content}\r\n\t\t\t\t\t\t</span>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"todo__actions\">\r\n\t\t\t\t\t<a \r\n\t\t\t\t\t\tonClick={(e) => this.setVisible(e, true, this.props.id, this.props.token)}\r\n\t\t\t\t\t\thref='./'><i className=\"todo__icon icon-basic-todolist-pen\"></i>編輯</a>\r\n\t\t\t\t\t<a \r\n\t\t\t\t\t\tonClick={(e)=>this.deleteHandler(e, this.props.id, this.props.token)}\r\n\t\t\t\t\t\thref='./'><i className=\"todo__icon icon-basic-trashcan\"></i>刪除</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\ttitle=\"更新\"\r\n\t\t\t\t\tstyle={{ top: 20 }}\r\n\t\t\t\t\tvisible={this.state.edit}\r\n\t\t\t\t\tonOk={() => this.updateHandler(this.props.id, this.props.token)}\r\n\t\t\t\t\tonCancel={(e) => this.setVisible(e,false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Form.Item\r\n                            label=\"開始日期\"\r\n                        >\r\n                            {getFieldDecorator('startDate', config)(\r\n                                <DatePicker />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"結束日期\"\r\n                        >\r\n                            {getFieldDecorator('endDate', config2)(\r\n                                <DatePicker />\r\n                            )}\r\n                        </Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"活動標題\" >\r\n                            {\r\n                                getFieldDecorator('summary',{\r\n                                    initialValue: this.state.default.summary, \r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '必填欄位唷',\r\n                                        },\r\n                                        {\r\n                                            validator: (rule, value, callback) => {\r\n                                                const patt = /^[\\u4e00-\\u9fa5a-zA-Z0-9.]{0,30}$/\r\n                                                if(patt.test(value)){\r\n                                                    callback();\r\n                                                }else{\r\n                                                    callback('含錯誤字元');\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Input placeholder='活動標題'/>\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n\tdeleteHandler = async (e, id, token) => {\r\n\t\te.preventDefault();\r\n\t\tconst result = await axios.delete('/todolist', { \r\n\t\t\tdata: {\r\n\t\t\t\tid,\r\n\t\t\t\ttoken\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.resultHandler(result, '刪除成功', '刪除失敗')\r\n\t}\r\n\tresultHandler = (result, msg, errMsg) => {\r\n\t\tif(result.data.data === 'OK'){\r\n\t\t\tmessage.success(msg);\r\n\t\t\tthis.props.reload();\r\n\t\t}else{\r\n\t\t\tmessage.error(errMsg);\r\n\t\t}\r\n\t}\r\n\tconfirmHandler = async (id, token, status) => {\r\n\t\tstatus = status === 'confirmed' ? 'tentative' : 'confirmed';\r\n\t\tconst result = await axios.patch('/todolist', {\r\n\t\t\tid, token, status\r\n\t\t});\r\n\t\tthis.resultHandler(result, '設定完成', '設定失敗')\r\n\t}\r\n\tsetVisible = (e, show, id, token) => {\r\n\t\tif(e != null){\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\tthis.setState({edit: show});\r\n\t\tthis.props.form.resetFields();\r\n\t\tif(show){\r\n\t\t\tthis.getDefault(id, token);\r\n\t\t}\r\n\t}\r\n\tgetDefault = async (id, token) => {\r\n\t\tconst result = await axios.get(`/todolist/${id}?token=${token}`);\r\n\t\tlet defaultState = {...this.state.default};\r\n\t\tdefaultState.startTime = result.data.data.start.dateTime;\r\n\t\tdefaultState.endTime = result.data.data.end.dateTime;\r\n\t\tdefaultState.summary = result.data.data.summary;\r\n\t\tthis.setState({default: defaultState})\r\n\t\t// console.log('result', result);\r\n\t}\r\n\tupdateHandler = async (id, token) => {\r\n\t\tconsole.log('update',id, token);\r\n\t\tlet inputInfo = this.props.form.getFieldsValue();\r\n\t\tthis.props.form.validateFields(async (err) => {\r\n\t\t\tif(err){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst endDate = inputInfo.endDate.format('YYYY-MM-DD');\r\n\t\t\tconst startDate = inputInfo.startDate.format('YYYY-MM-DD');\r\n\t\t\tconst summary = inputInfo.summary;\r\n\t\t\tconsole.log('input',inputInfo);\r\n\t\t\tthis.setVisible(null, false);\r\n\t\t\tconst result = await axios.patch('/todolist',{\r\n\t\t\t\tid, token, summary, startDate, endDate\r\n\t\t\t})\r\n\t\t\tthis.resultHandler(result, '設定完成', '設定失敗');\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default Form.create()(TodoItem);\r\n","export default function urlParse(url){\n    let nowUrl = new URL(url);\n    let params = nowUrl.searchParams;\n    let obj = {};\n    for (let pair of params.entries()) {\n        obj[pair[0]] = pair[1];\n    }\n    return obj;\n}","import React from 'react';\nimport { Button, Input, Form, DatePicker, message } from 'antd';\nimport axios from '../../utils/axios';\nimport moment from 'moment';\nimport './additem.scss';\n\nconst addItem = (props) => {\n    const { getFieldDecorator } = props.form;\n    const config = {\n        rules: [{ type: 'object', required: true, message: '請選擇日期' }],\n    };\n    return(\n        <li className=\"todo__item--add\">\t\t\n            <div className=\"todo__content\">\n                <div className=\"form__group\">\n                    <Form>\n                        <Form.Item\n                            label=\"開始日期\"\n                        >\n                            {getFieldDecorator('startDate', config)(\n                                <DatePicker />\n                            )}\n                        </Form.Item>\n                        <Form.Item\n                            label=\"結束日期\"\n                        >\n                            {getFieldDecorator('endDate', config)(\n                                <DatePicker />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"活動標題\" hasFeedback >\n                            {\n                                getFieldDecorator('summary',{\n                                    initialValue: '', \n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '必填欄位唷',\n                                        },\n                                        {\n                                            validator: (rule, value, callback) => {\n                                                const patt = /^[\\u4e00-\\u9fa5a-zA-Z0-9.]{0,30}$/\n                                                if(patt.test(value)){\n                                                    callback();\n                                                }else{\n                                                    callback('含錯誤字元');\n                                                }\n                                            }\n                                        }\n                                    ]\n                                })(\n                                    <Input placeholder='活動標題'/>\n                                )\n                            }\n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n            <div className=\"todo__actions\">\n                <Button onClick={()=>{\n                    let inputInfo = props.form.getFieldsValue();\n                    props.form.validateFields(async (err) => {\n                        if(err){\n                            return;\n                        }\n                        inputInfo.endDate = inputInfo.endDate.format('YYYY-MM-DD');\n                        inputInfo.startDate = inputInfo.startDate.format('YYYY-MM-DD');\n                        inputInfo.token = props.token\n                        const res = await axios.post('/todolist',inputInfo)\n                        resHandler(props, res.data.data);\n                    })\n                }} type=\"primary\">送出</Button>\n                <Button>取消</Button>\n            </div>\n        </li>\n    )\n}\nvar resHandler = (props, res) => {\n    if(res === 'OK'){\n        props.reload();\n        props.form.resetFields();\n        message.success('創建完成');\n    }else{\n        message.error('創建失敗');\n    }\n}\n\nexport default Form.create()(addItem);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport TodoItem from '../../components/todoList/TodoItem';\nimport { message, Spin } from 'antd';\nimport axios from '../../utils/axios';\nimport parseUrl from '../../utils/parseUrl';\nimport AddItem from '../../components/todoList/addItem';\n\nimport './../../sass/all.scss';\nimport './../../assets/icon-font.css';\nimport './index.scss';\n\nclass Todolist extends Component {\n\ttoken = '';\n\tstate = {\n\t\tinputValue: '',\n\t\tlist: [],\n\t\tloading: false,\n\t\tedit: false\n\t}\n\trender() {\n\t\tconst confirmed = this.state.list.filter((item) => {\n\t\t\tif(item.status === \"confirmed\"){\n\t\t\t\treturn item\n\t\t\t}\n\t\t\treturn false\n\t\t})\n\t\tconst notConfirmed = this.state.list.filter((item) => {\n\t\t\tif(item.status !== \"confirmed\"){\n\t\t\t\treturn item\n\t\t\t}\n\t\t\treturn false\n\t\t})\n\t\treturn (\n\t\t\t<main className=\"wrapper\">\n\t\t\t\t<section className=\"section section-todo\">\n\t\t\t\t\t<div className=\"todo\">\n\t\t\t\t\t\t<h1 className=\"heading-primary\">\n\t\t\t\t\t\t\t<span className=\"heading-primary--main\">Todo List</span>\n\t\t\t\t\t\t</h1>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<ul className=\"todo__list\">\n\t\t\t\t\t\t\t<Spin\n\t\t\t\t\t\t\t\tspinning={this.state.loading}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5>代辦清單</h5>\t\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnotConfirmed.map((item, index)=>{\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<TodoItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tcontent={item.summary}\n\t\t\t\t\t\t\t\t\t\t\t\tstatus={item.status}\n\t\t\t\t\t\t\t\t\t\t\t\ttoken={this.token}\n\t\t\t\t\t\t\t\t\t\t\t\treload={this.reload}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<h5>已完成</h5>\t\t\t\t\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconfirmed.map((item, index)=>{\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<TodoItem  \t\t\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tcontent={item.summary}\n\t\t\t\t\t\t\t\t\t\t\t\tstatus={item.status}\n\t\t\t\t\t\t\t\t\t\t\t\ttoken={this.token}\n\t\t\t\t\t\t\t\t\t\t\t\treload={this.reload}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Spin>\n\n\t\t\t\t\t\t\t<h5>新增任務</h5>\t\n\t\t\t\t\t\t\t<AddItem\n\t\t\t\t\t\t\t\ttoken={this.token}\n\t\t\t\t\t\t\t\treload={this.reload}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t);\n  \t}\n\tasync componentDidMount(){\n\t\tthis.token = parseUrl(document.location.href).token;\n\t\tthis.setState({loading: true});\n\t\tconst result = await axios.get(`/todolist?token=${this.token}`);\n\t\tthis.getListResultHandler(result);\n\t}\n\n\tgetListResultHandler = (result) => {\n\t\tif(result.data.code === 500){\n\t\t\tmessage.error(result.data.msg);\n\t\t\tthis.props.history.push('/')\n\t\t}\n\t\tconsole.log('data',result.data.data);\n\t\tthis.setState({\n\t\t\tlist: result.data.data,\n\t\t\tloading: false\n\t\t})\n\t}\n\n\treload = async () => {\n\t\tthis.setState({loading: true});\n\t\tconst result = await axios.get(`/todolist?token=${this.token}`);\n\t\tthis.getListResultHandler(result);\n\t}\n}\n\nexport default withRouter(Todolist);\n","import React from 'react';\nimport {Button} from 'antd';\nimport './index.scss';\n\nconst login = () => {\n    return(\n        <div>\n            <Button className='btn-login' type=\"primary\" onClick={()=>{\n                document.location.href = 'http://localhost:5000/api/auth/google'\n            }}>Google 授權</Button>\n        </div>\n    )\n}\n\nexport default login;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport TodoList from './pages/todoList';\nimport login from './pages/login';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={login} />\n\t\t\t\t\t<Route path=\"/todolist\" component={TodoList} />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t)\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Todolist from './components/todoList';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}